@page "/signalr-chatroom"
@inject NavigationManager navigate
@layout HomeMasterPage

<style>
    .chat-sidebar {
        height: 100vh;
        overflow-y: auto;
    }

    .chat-content {
        height: 100vh;
        display: flex;
        flex-direction: column;
    }

    .chat-messages {
        flex-grow: 1;
        overflow-y: auto;
        padding: 1rem;
        border-bottom: 1px solid #dee2e6;
    }

    .chat-input {
        padding: 1rem;
    }
</style>

<div class="container">
    <div class="row">
        <!-- Sidebar -->
        <div class="col-3 chat-sidebar bg-light">
            <div class="d-flex justify-content-between align-items-center p-3 border-bottom">
                <h5 class="m-0">Chat Rooms</h5>
                <button class="btn btn-primary btn-sm" @onclick="HandleAddRoom">+ Add Room</button>
            </div>
            <ul class="list-group list-group-flush">
                @foreach (RoomVM item in rooms)
                {
                    <li class="list-group-item">@item.name<span class="badge bg-primary float-end">0</span></li>
                }
            </ul>
        </div>

        <!-- Chat Content -->
        <div class="col-9 chat-content">
            <div class="d-flex justify-content-between align-items-center p-3 border-bottom">
                <h5 class="m-0">Room 1</h5>
                <button class="btn btn-danger btn-sm">Leave Room</button>
            </div>
            <div class="chat-messages">
                <p><strong>User1</strong><br> Hello everyone! <span class="text-muted small">10:30 AM</span></p>
                <p class="text-end"><strong>You</strong><br> Hi! How are you? <span class="text-muted small">10:31
                        AM</span></p>
            </div>
            <div class="chat-input">
                <form>
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Type a message">
                        <button class="btn btn-primary" type="submit">Send</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@code {
    HubConnection RoomHub;
    List<RoomVM> rooms = new List<RoomVM>();
    public void HandleAddRoom()
    {
        RoomHub.InvokeAsync("AddRoom");
    }
    protected override async Task OnInitializedAsync()
    {
        RoomHub = new HubConnectionBuilder()
        .WithUrl(navigate.ToAbsoluteUri("/room-hub"))
        .Build();
        //Kết nối (connect)
        await RoomHub.StartAsync();
        //Hàm lắng nghe server
        RoomHub.On<List<RoomVM>>("GetAllRoom", async (lstRoom) =>
        {
            rooms = lstRoom;
            //Cập nhật lại giao diện khi tất cả các async khác chạy xong
            await InvokeAsync(StateHasChanged);
        });
    }
    public void Dispose()
    {
        //Ngắt kết nối
        RoomHub.StopAsync();
    }
}