@page "/detail/{Id}"
@layout HomeMasterPage
@inject HttpClient _http;
@using System.Net.Http.Json;

@{
    string html = $"<p style='color:red;'>lorem123</p>";
}

<div class="container">
    <h3>Product Detail - @Id</h3>
    <div class="row">
        <div class="col-4">
            <img src="https://i.pravatar.cc?u=@ProdDetail.id" alt="..." class="w-100" />
        </div>
        <div class="col-8">
            <h3>@ProdDetail.name</h3>
            <p>@ProdDetail.price </p>
            <p>@(new MarkupString(html))</p>
            <button class="btn btn-success">
                <i class="fa fa-cart-plus"></i>
                Add to cart
            </button>
        </div>
    </div>
    <h3>RelatedProduct</h3>
    <div class="row mt-5">
        @foreach (ProductModel prod in lstProduct)
        {
            <div class="col-4 mt-2">
                <div class="card">
                    <img src="https://i.pravatar.cc?u=@prod.id" alt="..." class="w-100">
                    <div class="card-body">
                        <h3 class="card-title">@prod.name - @prod.id</h3>
                        <div class="card-text">
                            @prod.price
                        </div>
                        <a href="/detail/@prod.id" class="btn btn-dark">Detail</a>
                    </div>
                </div>
            </div>
        }
    </div>


</div>

@code {
    [Parameter]
    public string Id { get; set; }
    public ProductModel ProdDetail { get; set; } = new ProductModel();
    public List<ProductModel> lstProduct = new List<ProductModel>();
    protected override async Task OnInitializedAsync()
    {
        //Hàm sẽ chạy sau khi html của component được render (chạy 1 lần sau khi html được khởi tạo)
        @* GetDataProduct(); *@
        GetAllProduct();
    }

    public override async Task SetParametersAsync(ParameterView param)
    {
        //Chạy mỗi khi có tham số [Parameter] của component thay đổi
        await base.SetParametersAsync(param);
        GetDataProduct();
    }


    async void GetDataProduct()
    {
        //Gọi API từ server khác để lấy dữ liệu
        var response = await _http.GetFromJsonAsync<ProductModel>($"https://svcy.myclass.vn/api/ProductApi/get/{Id}");
        ProdDetail = response;
        StateHasChanged();
    }

    async void GetAllProduct()
    {
        //Gọi API từ server khác để lấy dữ liệu
        var response = await _http.GetFromJsonAsync<ProductModel[]>("https://svcy.myclass.vn/api/ProductApi/getall");
        lstProduct = response.ToList();
        StateHasChanged();
    }

}