@inject ProductService prodService
@inject NavigationManager Nav

<div class="container">
    @if (showAddProduct)
    {
        <div class="mt-2">
            <p>Thêm sản phẩm mới vào cửa hàng của bạn.</p>
            <AdminAddNew />
        </div>
    }
    <h3>Product Management</h3>
    <a href="/admin/add-product" class="btn btn-success" @onclick="ToggleAddProduct">Add new product</a>
    <div class="form-group mt-2">
        <form class="input-group">
            <input class="form-control" id="search">
            <button class="btn btn-success">Search</button>
        </form>
    </div>
    <table class="table table-hover table-bordered text-center align-middle shadow-sm mt-3">
        <thead class="table-dark text-white">
            <tr>
                <th style="width: 10%;">ID</th>
                <th style="width: 25%;">Image</th>
                <th style="width: 20%;">Price</th>
                <th style="width: 25%;">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (ProductVM item in lstProd)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>
                        <img src="@item.Image" alt="Shoe Image" class="img-thumbnail rounded"
                            style="width: 100px; height: 100px; object-fit: cover;">
                    </td>
                    <td><strong>$@item.Price</strong></td>
                    <td>
                        <button class="btn btn-sm btn-success me-2"><i class="bi bi-pencil-square"></i> Edit</button>
                        <button class="btn btn-sm btn-danger"><i class="bi bi-trash"></i> Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    HubConnection RoomHub;
    List<ProductVM> lstProd = new List<ProductVM>();
    private bool showAddProduct = false;
    private void ToggleAddProduct()
    {
        showAddProduct = !showAddProduct;
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        RoomHub = new HubConnectionBuilder()
        .WithUrl(Nav.ToAbsoluteUri("/room-hub"))
        .Build();
        await RoomHub.StartAsync();
        RoomHub.On<List<ProductVM>>("GetAllProduct", async (lstProd) =>
        {
            this.lstProd = lstProd;
            await InvokeAsync(StateHasChanged);
        });
    }

    public void Dispose()
    {
        RoomHub.StopAsync();

    }
}